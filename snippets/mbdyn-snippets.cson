'.source.mbdyn.section.data':
  'problem-definition':
    'prefix': 'problem:'
    'body': 'problem: ${1:\\{initial value | inverse dynamics\\}};'
    'description': 'Problem type'
'.source.mbdyn.section.initialvalue':
  'initial-time':
    'prefix': 'initial time:'
    'body': 'initial time: ${1:<time>};'
    'description': 'Simulation initial time'
  'final-time':
    'prefix': 'final time:'
    'body': 'final time: ${1:\\{forever | <time>\\}};'
    'description': 'Simulation final time'
  'strategy':
    'prefix': 'strategy:'
    'body': 'strategy: ${1:<strategy_type>}'
    'description': 'Strategy for time step change'
  'min-time-step':
    'prefix': 'min time step:'
    'body': 'min time step: ${1:<min_time_step>};'
    'description': 'Minimum allowed time step'
  'max-time-step':
    'prefix': 'max time step:'
    'body': 'max time step: ${1:\\{<max_time_step> | unlimited\\}};'
    'description': 'Maximum allowed time step'
  'time-step':
    'prefix': 'time step:'
    'body': 'time step: ${1:<time_step>};'
    'description': 'Initial time step. If no change is asked, constant throughout simulation'
  'modify-residual test':
    'prefix': 'modify residual test;'
    'body': 'modify residual test;'
    'description': 'Modify residual test taking in account the status rate of change'
  'tolerance':
    'prefix': 'tolerance'
    'body': """
      tolerance: ${1:\\{null | <residual_tolerance>\\}},
        ${2:[test, \\{none | norm | minmax\\}] [, scale]}'
        ${3:[, \\{null | <solution_tolerance>\\}]}
        ${4:[, test, \\{none | norm | minmax\\}];}
    """
    'description': 'Residual and (optional) solution tolerance'
  'max iterations':
    'prefix': 'max iterations'
    'body': 'max iteraions: ${1:<max_iterations>} ${2:[, at most]};'
    'description': 'Error out after <max_iterations> or continue after at most <max_iterations> if error is reduced'
  'modify residual test':
    'prefix': 'modify residual test'
    'body': 'modify resisual test;'
    'description': 'Modify the residual test taking into account the rate of change of the status'
  'method':
    'prefix': 'method'
    'body': 'method: ${1:<method_data>};'
    'description': 'Selection of integration scheme'
  'crank nicolson':
    'prefix': 'crank nicolson'
    'body': 'crank nicolson;'
    'descrition': 'Crank-Nicolson multistep method'
  'ms':
    'prefix': 'ms'
    'body': """
      ms,
      ${1:(DriveCaller)<differential_radius>},
      ${2:[(DriveCaller)<algebraic_radius>]};
    """
    'description': 'Multistep method.'
'.source.mbdyn.definition.strategy':
  'strategy-factor':
    'prefix': 'factor:'
    'body': """
      factor,
      ${1:<reduction_factor>},
      ${2:<steps_before_reduction>},
      ${3:<raise_factor>},
      ${4:<steps_before_raise>},
      ${5:<min_iterations>,}
      ${6:[<max_iterations]};
    """
    'description': 'Strategy for time step change: use factor'
  'strategy-change':
    'prefix': 'change'
    'body': 'change, ${1:(DriveCaller)<time_step_pattern>};'
    'description': 'Strategy for time step change: use drive caller'
  'strategy-no-change':
    'prefix': 'no change'
    'body': 'no change;;'
    'description': 'Strategy for time step change: no change. WARNING: this
    disables termination of max iterations'
# '.source.mbdyn.section.inversedynamics':
'.source.mbdyn.section.nodes':
  'node-structural-definition':
    'prefix': 'structural:'
    'body': 'structural: ${1:<label>}, ${2:\\{static | dynamic | modal | dummy\\}}'
    'description': 'Structural node definition'
  'node-structural-dynamic-definition':
    'prefix': 'dynamic'
    'body': """
      dynamic,
      ${1:<absolute_position>,}
      ${2:<absolute_orientation_matrix>,}
      ${3:[orientation description, <orientation_description>],}
      ${4:<absolute_velocity>,}
      ${5:<absolute_angular_velocity>;}
    """
    'description': 'Dynamic structural node definition'
  'node-structural-static-definition':
    'prefix': 'static'
    'body': """
      static,
      ${1:<absolute_position>,}
      ${2:<absolute_orientation_matrix>,}
      ${3:[orientation description, <orientation_description>],}
      ${4:<absolute_velocity>,}
      ${5:<absolute_angular_velocity>};
    """
    'description': 'Static (inertia-less) structural node definition'
  'node-structural-static-displacement-definition':
    'prefix': 'static displacement'
    'body': """
      static displacement,
      ${1:<absolute_position>,}
      ${2:<absolute_velocity>;}
    """
    'description': 'Static displacement (massless point) structural node definition'
  'node-structural-dynamic-displacement-definition':
    'prefix': 'dispdyn'
    'body': """
      dynamic displacement,
      ${1:<absolute_position>,}
      ${2:<absolute_velocity>;}
    """
    'description': 'Dynamic displacement (point mass) structural node definition'
  'node-structural-modal-definition':
    'prefix': 'modal'
    'body': """
      modal,
      ${3:<absolute_position>,}
      ${4:<absolute_orientation_matrix>,}
      ${6:<absolute_velocity>,}
      ${7:<absolute_angular_velocity>;}
    """
    'description': 'Modal structural node definition'
  'node-structural-dummy-definition':
    'prefix': 'dummy'
    'body': 'dummy, ${1:<base node label>,}, ${2:\\{offset | relative frame\\}}'
    'description': 'Dummy structural node definition'
  'node-structural-dummy-offset-definition':
    'prefix': 'offset'
    'body': """
      offset,
        ${1:<relative_offset>,}
        ${2:<relative_orientation_matrix>;}
    """
    'description': 'Dummy node (offset) definition'
  'node-structural-dummy-relframe-definition':
    'prefix': 'relative frame'
    'body': """
      relative frame,
          ${1:<reference_node_label>,}
            position, ${2:<reference_offset>,}
            orientation, ${3:<reference_orientation_matrix>},
          pivot node, ${4:<pivot_node_label>,}
            position, ${5:<pivot_offset>,}
            orientation, ${6:<pivot_orientation_matrix>;}
    """
    'description': 'Dummy node (relative frame) definition'
  'node-structural-assembly':
    'prefix': 'assembly'
    'body': """
      assembly,
        ${1:<position_initial_stiffness>},
        ${2:<velocity_initial_stiffness>},
        ${3:<omega_rotates>}, {4:\\{yes | no\\};}
    """
    'description': 'Assembly-related parameters of structural node'
  'node-electic-definition':
    'prefix': 'electric'
    'body': """
      electric: ${1:<label>},
        value, ${2:<initial_value>},
        derivative, ${3:<derivative_initial_value>;}
    """
    'description': 'Electric node definition'
  'node-abstract-definition':
    'prefix': 'abstract'
    'body': """
      abstract: ${1:<label>}, ${2:\\{algebraic | differential\\},}
        value, ${3:<initial_value>},
        derivative, ${4:<derivative_initial_value>;}
    """
    'description': 'Abstract node definition'
  'node-hydraulic-definition':
    'prefix': 'hydraulic'
    'body': """
      'hyraulic: ${1:<label>},
        value, ${2:<initial_value>;}'
    """
    'description': 'Hydraulic node definition'
  'node-parameter-definition':
    'prefix': 'parameter'
    'body': 'parameter: ${1:<label>}, value, ${2:<initial_value>,} ${3:\\{element | sample and hold | beam strain gage\\},}'
    'description': 'Parameter node definition (WARNING: parameter nodes are obsolete)'
  'node-parameter-sampleandhold-definition':
    'prefix': 'sample and hold'
    'body': 'sample and hold, ${1:<signal>}, ${2:<sample_time>};'
    'description': 'Parameter node (sample and hold) definition'
  'node-parameter-beamstraingage-definition':
    'prefix': 'beam strain gage'
    'body': 'beam strain gage, ${1:<y>}, ${2:<z>};'
    'description': 'Parameter node (beam strain gage) definition.'
  'node-output-global':
    'prefix': 'output:'
    'body': 'output: ${1:\\{structural | abstract | electric | hydraulic | parameter\\}, ;'
    'description': 'Node output card'
  'output-structural-nodes-global':
    'prefix': 'structural,'
    'body': 'structural, ${1:[accelerations,]} ${2:\\{<node_label> | range\\}}'
    'description': 'Structural nodes output control'
  'output-electric-nodes-global':
    'prefix': 'electric,'
    'body': 'electric, ${1:\\{<node_label> | range\\}}'
    'description': 'Electric nodes output control'
  'output-abstract-nodes-global':
    'prefix': 'abstract,'
    'body': 'abstract, ${1:\\{<node_label> | range\\}}'
    'description': 'Abstract nodes output control'
  'output-hydraulic-nodes-global':
    'prefix': 'hydraulic,'
    'body': 'hydraulic, ${1:\\{<node_label> | range\\}}'
    'description': 'Hydraulic nodes output control'
  'output-nodes-global-range':
    'prefix': 'range'
    'body': 'range, ${1:<node_start_label>}, ${2:<node_end_label>}'
'.source.mbdyn.section.drivers':
  'file-driver':
    'prefix': 'file:'
    'body': 'file: ${2:\\{fixed step | variable step | socket | RTAI input | stream\\}}'
    'description': 'File driver definition'
  'fixed-step-driver':
    'prefix': 'fixed step'
    'body': """
      fixed step,
        ${1:\\{count | <steps_number>\\}},
        ${2:<columns_number>},
        initial time, ${3:\\{from file | <initial_time\\}},
        time step, ${4:\\{from file | <time_step>\\}},
        ${4:[interpolation, {linear | const}],}
        ${5:[pad zeroes, {yes | no}
          bailout, \\{none | upper | lower | any\\}],}
        "${6:<file_name>}";
    """
    'description': 'Fixed step file driver definition'
  'variable-step-driver':
    'prefix': 'variable step'
    'body': """
      variable step,
        ${1:<channels_number>},
        ${2:[interpolation, \\{linear | const\\}],}
        ${3:[pad zeroes, \\{yes | no\\}
          bailout, \\{none | upper | lower | any\\}],}
        "${4:<file_name>}";
    """
    'description': 'Variable step file driver definition'
  'socket-driver':
    'prefix': 'socket'
    'body': """
      socket,
        ${1:<columns_number>},
        ${2:[initial values, <value #1>, ...],}
        ${3:\\{local, "<file_name"> | [port, <port_number>, ] (AuthenticationMethod) <authentication>\\}};
    """
    'description': 'Socket file driver definition'
  'RTAI-mailbox-driver':
    'prefix': 'RTAI input'
    'body': """
      RTAI input,
        stream driver name, "${1:<stream_name>}",
          ${2:[create, {yes | no}],}
          ${3:[host, "<host_name>"],}
          ${4:[\\{[non] blocking, [...]\\}],}
          ${5:<columns_number>};
    """
    'description': 'RTAI mailbox driver definition'
  'stream-driver':
    'prefix': 'stream'
    'body': """
      stream,
        name, ${1:"<stream_name>"},
        create, ${2:\\{yes | no\\}},
        ${3:[{local, "<path>" | [port, <port_number>, ] [host, "<host_name>" , ]}],}
        ${4:[ \\{ [no] signal | [non] blocking \\} , [...] ,]}
        ${5:[input every, <steps>,]}
        ${6:[receive first, {yes | no},]}
        ${7:[timeout, <timeout>],}
        ${8: [echo, "<echo_file_name>",]}
          ${9: [precision, <precision>,]}
          ${9: [shift, <shift>,]}
        ${10:<columns_number>}
        ${11:[, initial values, <value #1>, ... ,]}
        ;
    """
    'description': 'Stream driver definition'
# '.source.mbdyn.section.elements':
